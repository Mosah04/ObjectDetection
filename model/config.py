from keras import backend as K


class Config:

    def __init__(self):

        self.verbose = True

        # Settings for data augmentation
        self.use_horizontal_flips = False
        self.use_vertical_flips = False
        self.rot_90 = False

        # Number of ROIs per iteration. Higher means more memory use.
        self.num_rois = 32

        # Anchor box scales
        self.anchor_box_scales = [64, 128, 256, 512]

        # Anchor box ratios
        self.anchor_box_ratios = [[1, 1], [1, 2], [2, 1]]

        # Size to resize the smallest side of the image
        self.im_size = 300

        # Image channel-wise mean to subtract
        self.img_channel_mean = [103.939, 116.779, 123.68]
        self.img_scaling_factor = 1.0

        # Number of ROIs at once
        self.num_rois = 4

        # Stride at the RPN (this depends on the network configuration)
        self.rpn_stride = 16

        self.balanced_classes = False

        # Scaling the standard deviation
        self.std_scaling = 4.0
        self.classifier_regr_std = [8.0, 8.0, 4.0, 4.0]

        # Overlaps for RPN
        self.rpn_min_overlap = 0.3
        self.rpn_max_overlap = 0.7

        # Overlaps for classifier ROIs
        self.classifier_min_overlap = 0.1
        self.classifier_max_overlap = 0.5

        # Placeholder for the class mapping, automatically generated by the parser
        self.class_mapping = None

        # Location of pretrained weights for the base network
        # Weight files can be found at:
        # https://github.com/fchollet/deep-learning-models/releases/download/v0.2/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5
        self.base_net_weights = self._get_base_net_weights()

    def _get_base_net_weights(self) -> str:
        # Use the modern 'image_data_format()' function to check if the backend is using 'channels_last' or 'channels_first'
        if K.image_data_format() == 'channels_first':
            return 'resnet50_weights_th_dim_ordering_th_kernels_notop.h5'
        else:
            return 'resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5'
